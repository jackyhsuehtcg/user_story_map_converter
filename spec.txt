這個專案是要做一個 User Story Map Converter。

User Story Map 的來源會是 Lark 多維表格中的資料表。資料表中，各紀錄會有一層或多層的父子紀錄關係，程式必須能夠正確的讀取整張表的紀錄，並且建立起個紀錄間的父子關係。

當紀錄正確被讀取並且建立起正確的父子關係後，程式必須依據這些資料建立出心智圖（或樹狀圖）。

程式必須提供前端 web 管理介面供使用者操作輸入 User Story Map 多維表格資料表的來源網址，並要能夠同時儲存跟管理多個團隊的設定。

在 web 介面的首頁，必須陳列出多個團隊的 User Story Map 縮圖，並能夠點選展開大圖並瀏覽。側邊工具欄需提供進入管理來源網址頁面的連結。

web 首頁縮圖不即時更新，在縮圖下方列出繪製的時間，並提供 refresh button，這樣才會依據最新的資料表讀取資料並產生新的圖。

在 web 首頁各團隊縮圖的下方，需提供簡單易操作的模式，供使用者匯出多種格式的心智圖，包含 PNG、JPG、Markdown 以及 PDF。

介面設計應簡潔實用，優先考慮功能性和易用性。提供日夜模式切換功能。建議使用現成的 UI 框架如 Bootstrap 或其他成熟的前端框架來加速開發。

如果市面上有免費可取用的風格與介面函式庫則優先取用，做最低程度的再設計。

系統使用 Python 搭建。

相關 Lark 操作的實作可以參考 /Users/hideman/code/jira_sync_v3，但必須簡化到符合本案的需求即可。

各元件採用模組化設計，使負責功能單一，後續功能增加的時候必須嚴守這個規則，極力避免耦合度過高造成程式碼難以修改。

所有檔案都擺在同一層即可，不要做過多的目錄管理，盡量讓專案小且容易管理。